apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def getConfigurationProperty = { configuration ->
    def configurationPropertyValue = ""
    File configurationPropsFile = file('configuration.properties')
    Properties configurationProps = new Properties()
    try {
        if (configurationPropsFile.exists() && configurationPropsFile.canRead()) {
            configurationProps.load(new FileInputStream(configurationPropsFile))
            configurationPropertyValue = configurationProps[configuration].toString()
        }
    } catch (e) {
        logger.debug(e.getLocalizedMessage())
    }
    return configurationPropertyValue
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "ch.itomy.githubtest"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'CLIENT_ID', getConfigurationProperty('CLIENT_ID')
        buildConfigField 'String', 'CLIENT_SECRET', getConfigurationProperty('CLIENT_SECRET')
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.1.0'

    // UI
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // KTX
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation "androidx.activity:activity-ktx:1.1.0"
    implementation "androidx.fragment:fragment-ktx:1.2.1"

    // Arch lifecycle
    def archLifecycleVersion = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"
    // for RxJava
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$archLifecycleVersion"

    def pagingVersion = "2.1.1"
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Coroutines
    def coroutinesVersion = "1.3.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // Dagger 2
    def daggerVersion = "2.26"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // Glide
    def glideVersion = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Retrofit
    def retrofitVersion = "2.6.2"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:4.3.1"

    implementation 'com.google.code.gson:gson:2.8.6'

    // Tests
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}